“ерниста€ дорога через дебри C# и заросли C++/CX разработки дл€ Windows Runtime в какой-то момент привела мен€ к библиотеке шаблонов WRL, облегчающей написание приложений и компонентов WinRT и COM. ѕри работе именно с этой библиотекой мне захотелось узнать, что же скрывает под собой код:
<source lang="cpp">
#include "pch.h"
#include "RAWinRT.WRL.h"

using namespace Microsoft::WRL::Wrappers;
using namespace Microsoft::WRL;
using namespace ABI::RAWinRT::WRL;
using namespace ABI::Windows::ApplicationModel::Background;

class ABI::RAWinRT::WRL::TestTask : public RuntimeClass < RuntimeClassFlags<WinRt>, IBackgroundTask >
{
	InspectableClass(RuntimeClass_RAWinRT_WRL_TestTask, BaseTrust);
public:
	STDMETHODIMP Run(IBackgroundTaskInstance *taskInstance) override
	{
		return S_OK;
	}
};

ActivatableClass(TestTask);
</source>
и эти загадочные макросы, шаблоны, функции библиотеки. <br/>
» решил € начать с самой простого. Ќаписать компонент Windows Runtime, имеющий единственный "класс" фоновой задачи, на Visual C++. <br/>
≈сли вам интересно, что из этого получилось, то добро пожаловать под кат.
<habracut />